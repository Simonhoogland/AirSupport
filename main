#include <stm32f4xx.h>
#include <stm32f4xx_usart.h>
#include <stm32f4xx_gpio.h>
#include <stm32f4xx_rcc.h>
#include <misc.h>
 
int main(void)
{
    //Enable clock of pints & UART
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC , ENABLE);
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART6, ENABLE);
    
    //setup GPIO
    GPIO_InitTypeDef GPIO_struct;
    GPIO_struct.GPIO_Pin   = GPIO_Pin_6 | GPIO_Pin_7;
    GPIO_struct.GPIO_Mode  = GPIO_Mode_AF;  // alternate pins
    GPIO_struct.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_struct.GPIO_OType = GPIO_OType_PP; // pull-up
    GPIO_struct.GPIO_PuPd  = GPIO_PuPd_UP;  // pull-up
    GPIO_Init(GPIOC, &GPIO_struct);
    //Do pin-assignment
    GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_USART6);
    GPIO_PinAFConfig(GPIOC, GPIO_PinSource7, GPIO_AF_USART6);
    
    // Setup UART
    USART_InitTypeDef UART_struct;
    UART_struct.USART_BaudRate            = 57600;
    UART_struct.USART_WordLength          = USART_WordLength_8b;
    UART_struct.USART_StopBits            = USART_StopBits_1;
    UART_struct.USART_Parity              = USART_Parity_No;
    UART_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    UART_struct.USART_Mode                = USART_Mode_Tx | USART_Mode_Rx;
    USART_Init(USART6, &UART_struct);
    
    // Enable Interrupt
    USART_ITConfig(USART6, USART_IT_RXNE, ENABLE);
    
    // Init interrupt
    NVIC_InitTypeDef NVIC_struct;
    NVIC_struct.NVIC_IRQChannel                   = USART6_IRQn;
    NVIC_struct.NVIC_IRQChannelCmd                = ENABLE;
    NVIC_struct.NVIC_IRQChannelPreemptionPriority = 0;
    NVIC_struct.NVIC_IRQChannelSubPriority        = 0;
    NVIC_Init(&NVIC_struct);
    
    //Enable UART port
    USART_Cmd(USART6, ENABLE);
    
    void USART6_IRQHandler(void){

    }

    uint16_t data = USARTx->DR;

    while (USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);

    USART_SendData (USARTx, data);
    while(1)
    {
        USART_puts(USART6, "Hello\n");
    }
}
